openapi: '3.0.0'
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: /v1
paths:
  /ping:
    get:
      description: |
        ping then pong!
      operationId: ping
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 20
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: pong
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/quote/{quoteId}:
    get:
      description: Returns a quote based on a quoteId
      operationId: find quote by quoteId
      parameters:
        - name: quoteId
          in: path
          description: ID of quote to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: quote response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/quote:
    post:
      description: Creates a new quote in CPQ.
      operationId: createQuote
      requestBody:
        description: Quote to add to CPQ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quote'
      responses:
        '200':
          description: quote response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      
components:
  schemas:
    Quote:
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        tag:
          type: string
        quoteType:
          $ref: '#/components/schemas/QuoteType'

    QuoteType:
      type: number

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key